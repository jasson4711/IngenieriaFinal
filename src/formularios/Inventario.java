/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Usuario
 */
public class Inventario extends javax.swing.JDialog {

    DefaultTableModel modeloTabla;
    DefaultComboBoxModel modeloComboTallas;
    DefaultComboBoxModel modeloComboColores;
    TableColumnModel modeloColumna;

    /**
     * Creates new form Clientes
     */
    public Inventario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        cargarDatosProductos("");
        cargarComboColores();
        cargarComboTallas();
        botonesInicio();
        txtBloqueo(false);
        mostrarDatosSeleccionaTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void mostrarDatosSeleccionaTabla() {
        jTable_Inventario.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (jTable_Inventario.getSelectedRow() != -1) {
                    int fila = jTable_Inventario.getSelectedRow();

                    jTextField_CodPro.setText(jTable_Inventario.getValueAt(fila, 0).toString().trim());
                    jTextField_NomPro.setText(jTable_Inventario.getValueAt(fila, 1).toString().trim());
                    jTextField_MarcaPro.setText(jTable_Inventario.getValueAt(fila, 2).toString().trim());
                    jComboBox_Talla.setSelectedItem(jTable_Inventario.getValueAt(fila, 3).toString().trim());
                    jComboBox_Colores.setSelectedItem(jTable_Inventario.getValueAt(fila, 4).toString().trim());
                    jTextField_PrePro.setText(jTable_Inventario.getValueAt(fila, 5).toString().trim());
                    jTextField_PreVen.setText(jTable_Inventario.getValueAt(fila, 6).toString().trim());
                    jTextField_StockPro.setText(jTable_Inventario.getValueAt(fila, 7).toString().trim());
                    jTextField_Descripcion.setText(jTable_Inventario.getValueAt(fila, 8).toString().trim());
                    txtBloqueo(true);
                    jTextField_CodPro.setEnabled(false);
                    botonesBorrar();
                    botonesActualizar();
                }
            }
        });
    }

    public void cargarComboTallas() {
        ConexionTienda cc = new ConexionTienda();
        Connection cn = cc.conectar();
        String sql = "select * from tallas order by id_tal";
        modeloComboTallas = new DefaultComboBoxModel();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                modeloComboTallas.addElement(rs.getString(2));
            }
            jComboBox_Talla.setModel(modeloComboTallas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de base: " + ex);
        }
    }

    public void cargarComboColores() {
        ConexionTienda cc = new ConexionTienda();
        Connection cn = cc.conectar();
        String sql = "select * from colores order by nom_col";
        modeloComboColores = new DefaultComboBoxModel();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                modeloComboColores.addElement(rs.getString(2));
            }
            jComboBox_Colores.setModel(modeloComboColores);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de base: " + ex);
        }
    }

    public void establecerTamañoColumnas() {
        modeloColumna = jTable_Inventario.getColumnModel();
        modeloColumna.getColumn(0).setPreferredWidth(60);
        modeloColumna.getColumn(1).setPreferredWidth(120);
        modeloColumna.getColumn(2).setPreferredWidth(120);
        modeloColumna.getColumn(3).setPreferredWidth(70);
        modeloColumna.getColumn(4).setPreferredWidth(70);
        modeloColumna.getColumn(5).setPreferredWidth(55);
        modeloColumna.getColumn(6).setPreferredWidth(55);
        modeloColumna.getColumn(7).setPreferredWidth(55);
        modeloColumna.getColumn(8).setPreferredWidth(140);

    }

    public void cargarDatosProductos(String Dato) {

        String[] titulos = {"CÓDIGO", "NOMBRE", "MARCA", "TALLA", "COLOR", "P/C", "P/V", "STOCK", "DESCRIPCIÓN"};
        String[] registros = new String[9];
        jTable_Inventario.getTableHeader().setReorderingAllowed(false);
        jTable_Inventario.getTableHeader().setResizingAllowed(false);

        modeloTabla = new DefaultTableModel(null, titulos) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        ConexionTienda cc = new ConexionTienda();
        Connection cn = cc.conectar();
        String sql = "";
        sql = "select p.id_pro,p.tip_pro,p.mar_pro,t.des_tal,c.nom_col,p.pre_com,p.pre_ven,p.sto_pro,p.des_pro "
                + "from productos p, colores c, tallas t "
                + "where p.tip_pro LIKE '" + Dato + "%' "
                + "and p.id_col_per = c.id_col "
                + "and p.id_tal_per = t.id_tal "
                + "and p.estado = " + 1 + " "
                + "order by p.tip_pro ";
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                registros[0] = rs.getString(1);
                registros[1] = rs.getString(2);
                registros[2] = rs.getString(3);
                registros[3] = rs.getString(4);
                registros[4] = rs.getString(5);
                registros[5] = rs.getString(6);
                registros[6] = rs.getString(7);
                registros[7] = rs.getString(8);
                registros[8] = rs.getString(9);
                modeloTabla.addRow(registros);
            }
            jTable_Inventario.setModel(modeloTabla);
            establecerTamañoColumnas();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al obtener datos de la base:\n"+ex);
        } catch (Exception ex1) {
        }

    }

    public boolean compararPrecios() {
        Double preCom = Double.valueOf(jTextField_PrePro.getText());
        Double preVen = Double.valueOf(jTextField_PreVen.getText());
        if (preVen.compareTo(preCom) == 0) {
            int confirmar = JOptionPane.showConfirmDialog(null, "¿Está seguro de realizar esta acción?", "Precio de venta", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (confirmar == 0) {
                return true;
            } else {
                jTextField_PreVen.requestFocus();
                return false;
            }
        } else if (preVen < preCom) {
            JOptionPane.showMessageDialog(null, "No se puede realizar esta acción", "Precio venta", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    public String obtenerCodigoColor() {
        String color = jComboBox_Colores.getSelectedItem().toString();
        String sql = "select * from colores where nom_col ='" + color + "'";
        ConexionTienda cc = new ConexionTienda();
        Connection cn = cc.conectar();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                return rs.getString(1);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al intentar recuperar datos de la base\n" + ex);
        }

        return "";
    }

    public String obtenerCodigoTalla() {
        String talla = jComboBox_Talla.getSelectedItem().toString();
        String sql = "select * from tallas where des_tal ='" + talla + "'";
        ConexionTienda cc = new ConexionTienda();
        Connection cn = cc.conectar();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                return rs.getString(1);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al intentar recuperar datos de la base\n" + ex);
        }

        return "";
    }

    public void guardar() {

        if (jTextField_CodPro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el código");
            jTextField_CodPro.requestFocus(); // Para posicionar el raton
        } else if (jTextField_NomPro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el nombre");
            jTextField_NomPro.requestFocus();
        } else if (jTextField_MarcaPro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar la marca");
            jTextField_MarcaPro.requestFocus();
        } else if (jTextField_PrePro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el precio de compra");
            jTextField_PrePro.requestFocus();
        } else if (jTextField_PreVen.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el precio de venta");
            jTextField_PreVen.requestFocus();
        } else if (jTextField_StockPro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el stock");
            jTextField_StockPro.requestFocus();
        } else if (compararPrecios()) {

            ConexionTienda cc = new ConexionTienda();
            Connection cn = cc.conectar();
            String ID_PRO, TIP_PRO, MAR_PRO, ID_TAL_PER, ID_COL_PER, PRE_COM, PRE_VEN, STO_PRO, DES_PRO;
            ID_PRO = jTextField_CodPro.getText().trim().toUpperCase();
            TIP_PRO = jTextField_NomPro.getText().trim().toUpperCase();
            MAR_PRO = jTextField_MarcaPro.getText().trim().toUpperCase();
            ID_TAL_PER = obtenerCodigoTalla();
            ID_COL_PER = obtenerCodigoColor();
            PRE_COM = jTextField_PrePro.getText().trim();
            PRE_VEN = jTextField_PreVen.getText().trim();
            STO_PRO = jTextField_StockPro.getText().trim();
            int ESTADO = 1;
            System.out.println(ID_COL_PER);
            if (jTextField_Descripcion.getText().isEmpty()) {
                DES_PRO = "SIN DESCRIPCIÓN";
            } else {
                DES_PRO = jTextField_Descripcion.getText().toUpperCase();
            }

            String sql = "";
            sql = "insert into productos(ID_PRO, TIP_PRO, MAR_PRO, ID_TAL_PER, ID_COL_PER, PRE_COM, PRE_VEN, STO_PRO, DES_PRO, ESTADO)"
                    + "values(?,?,?,?,?,?,?,?,?,?)";
            try {
                PreparedStatement psd = cn.prepareStatement(sql);
                psd.setString(1, ID_PRO); //(Numero de campo/ nombre)
                psd.setString(2, TIP_PRO);
                psd.setString(3, MAR_PRO);
                psd.setString(4, ID_TAL_PER);
                psd.setString(5, ID_COL_PER);
                psd.setString(6, PRE_COM);
                psd.setString(7, PRE_VEN);
                psd.setString(8, STO_PRO);
                psd.setString(9, DES_PRO);
                psd.setInt(10, ESTADO);
                int n = psd.executeUpdate();

                if (n > 0) {
                    JOptionPane.showMessageDialog(null, "Se insertó la información correctamente");
                    cargarDatosProductos(""); //Actualizar la carga de datos
                    txtLimpiar();
                    txtBloqueo(false);
                    botonesInicio();

                }

            } catch (SQLException ex) { //permite manejar la excepcion de la base de datos
                JOptionPane.showMessageDialog(null, ex);
            } catch (Exception ex) {
            }
        }

    }

    public void actualizar() {
        if (jTextField_NomPro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el nombre");
            jTextField_NomPro.requestFocus();
        } else if (jTextField_MarcaPro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar la marca");
            jTextField_MarcaPro.requestFocus();
        } else if (jTextField_PrePro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el precio de compra");
            jTextField_PrePro.requestFocus();
        } else if (jTextField_PreVen.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el precio de venta");
            jTextField_PreVen.requestFocus();
        } else if (jTextField_StockPro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el stock");
            jTextField_StockPro.requestFocus();
        } else if (compararPrecios()) {
            ConexionTienda cc = new ConexionTienda();
            Connection cn = cc.conectar();
            String sql = "";
            String DES_PRO;
            if (jTextField_Descripcion.getText().isEmpty()) {
                DES_PRO = "SIN DESCRIPCIÓN";
            } else {
                DES_PRO = jTextField_Descripcion.getText().toUpperCase();
            }
            sql = "UPDATE productos SET TIP_PRO='" + jTextField_NomPro.getText().trim() + "'"
                    + ",MAR_PRO='" + jTextField_MarcaPro.getText().trim() + "'"
                    + ",ID_TAL_PER='" + obtenerCodigoTalla() + "'"
                    + ",ID_COL_PER='" + obtenerCodigoColor() + "'"
                    + ",PRE_COM='" + jTextField_PrePro.getText() + "'"
                    + ",PRE_VEN='" + jTextField_PreVen.getText() + "'"
                    + ",STO_PRO='" + jTextField_StockPro.getText() + "'"
                    + ",DES_PRO='" + DES_PRO.trim() + "'"
                    + " WHERE ID_PRO='" + jTextField_CodPro.getText() + "'";
            try {
                PreparedStatement psd = cn.prepareStatement(sql);
                int n = psd.executeUpdate();
                if (n > 0) {
                    JOptionPane.showMessageDialog(null, "Se actualizo el registro correctamente ");
                }
                cargarDatosProductos("");
                txtLimpiar();
                txtBloqueo(false);
                botonesInicio();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "No se pudo actualizar los datos. Intentelo nuevamente " + ex);
            }
        }
    }

    public void borrarProducto() {
        int conf = JOptionPane.showConfirmDialog(null, "¿Desea realizar la acción?", "Borrar registro", JOptionPane.YES_OPTION);
        if (conf == 0) {
            String sql = "update productos set estado = " + 0 + " where id_pro='" + jTextField_CodPro.getText() + "' ";
            ConexionTienda cc = new ConexionTienda();
            Connection cn = cc.conectar();
            try {
                PreparedStatement psd = cn.prepareStatement(sql);
                int n = psd.executeUpdate();
                if (n > 0) {
                    JOptionPane.showMessageDialog(null, "Registro borrado correctamente");
                    cargarDatosProductos("");
                    botonesInicio();
                    txtLimpiar();
                    txtBloqueo(false);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Ocurrió un error al realizar la acción:\n" + ex);
            }
        }
    }

    public void txtLimpiar() {
        jTextField_CodPro.setText("");
        jTextField_NomPro.setText("");
        jTextField_MarcaPro.setText("");
        jTextField_PrePro.setText("");
        jTextField_PreVen.setText("");
        jTextField_StockPro.setText("");
        jTextField_Descripcion.setText("");
        jTextField_Buscar.setText("");
        txtBloqueo(false);

    }

    public void txtBloqueo(boolean tutia) {
        jTextField_CodPro.requestFocus();
        jTextField_CodPro.setEnabled(tutia);
        jTextField_NomPro.setEnabled(tutia);
        jTextField_MarcaPro.setEnabled(tutia);
        jTextField_PrePro.setEnabled(tutia);
        jTextField_PreVen.setEnabled(tutia);
        jTextField_StockPro.setEnabled(tutia);
        jTextField_Descripcion.setEnabled(tutia);
        jComboBox_Talla.setEnabled(tutia);
        jComboBox_Colores.setEnabled(tutia);

    }

    public void botonesBorrar() {
        jButton_Nuevo.setEnabled(false);
        jButton_Guardar.setEnabled(false);
        jButton_Actualizar.setEnabled(true);
        jButton_Cancelar.setEnabled(true);
        jButton_Borrar.setEnabled(true);
        jButton_Volver.setEnabled(true);

    }

    public void botonesActualizar() {
        jButton_Nuevo.setEnabled(false);
        jButton_Guardar.setEnabled(false);
        jButton_Actualizar.setEnabled(true);
        jButton_Cancelar.setEnabled(true);
        jButton_Volver.setEnabled(true);
    }

    public void botonesNuevo() {
        jButton_Actualizar.setEnabled(false);
        jButton_Cancelar.setEnabled(true);
        jButton_Guardar.setEnabled(true);
        jButton_Nuevo.setEnabled(false);
        jButton_Borrar.setEnabled(false);
    }

    public void botonesInicio() {
        jButton_Actualizar.setEnabled(false);
        jButton_Cancelar.setEnabled(false);
        jButton_Guardar.setEnabled(false);
        jButton_Nuevo.setEnabled(true);
        jButton_Borrar.setEnabled(false);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Inventario = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_CodPro = new javax.swing.JTextField();
        jTextField_NomPro = new javax.swing.JTextField();
        jTextField_MarcaPro = new javax.swing.JTextField();
        jTextField_StockPro = new javax.swing.JTextField();
        jTextField_Buscar = new javax.swing.JTextField();
        jButton_Actualizar = new javax.swing.JButton();
        jButton_Nuevo = new javax.swing.JButton();
        jButton_Guardar = new javax.swing.JButton();
        jButton_Cancelar = new javax.swing.JButton();
        jButton_Volver = new javax.swing.JButton();
        jButton_Borrar = new javax.swing.JButton();
        jComboBox_Talla = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Descripcion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_PrePro = new uctextletras.UcTextNumerosDecimales();
        jTextField_PreVen = new uctextletras.UcTextNumerosDecimales();
        jLabel10 = new javax.swing.JLabel();
        jComboBox_Colores = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Inventario"));

        jTable_Inventario.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable_Inventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_InventarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Inventario);

        jLabel1.setText("Código:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Marca:");

        jLabel5.setText("Talla:");

        jLabel6.setText("P.Compra:");

        jLabel7.setText("Existencia:");

        jLabel8.setText("Buscar:");

        jTextField_CodPro.setEnabled(false);
        jTextField_CodPro.setNextFocusableComponent(jTextField_NomPro);
        jTextField_CodPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_CodProKeyTyped(evt);
            }
        });

        jTextField_NomPro.setEnabled(false);
        jTextField_NomPro.setNextFocusableComponent(jTextField_MarcaPro);
        jTextField_NomPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_NomProKeyTyped(evt);
            }
        });

        jTextField_MarcaPro.setEnabled(false);
        jTextField_MarcaPro.setNextFocusableComponent(jTextField_PrePro);
        jTextField_MarcaPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_MarcaProKeyTyped(evt);
            }
        });

        jTextField_StockPro.setEnabled(false);
        jTextField_StockPro.setNextFocusableComponent(jTextField_Descripcion);
        jTextField_StockPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_StockProKeyTyped(evt);
            }
        });

        jTextField_Buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_BuscarKeyReleased(evt);
            }
        });

        jButton_Actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar.png"))); // NOI18N
        jButton_Actualizar.setText("Actualizar");
        jButton_Actualizar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton_Actualizar.setNextFocusableComponent(jButton_Cancelar);
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });

        jButton_Nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo.png"))); // NOI18N
        jButton_Nuevo.setText("Nuevo");
        jButton_Nuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton_Nuevo.setNextFocusableComponent(jButton_Guardar);
        jButton_Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NuevoActionPerformed(evt);
            }
        });

        jButton_Guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        jButton_Guardar.setText("Guardar");
        jButton_Guardar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton_Guardar.setNextFocusableComponent(jButton_Actualizar);
        jButton_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GuardarActionPerformed(evt);
            }
        });

        jButton_Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancelar.png"))); // NOI18N
        jButton_Cancelar.setText("Cancelar");
        jButton_Cancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton_Cancelar.setNextFocusableComponent(jButton_Borrar);
        jButton_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarActionPerformed(evt);
            }
        });

        jButton_Volver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.png"))); // NOI18N
        jButton_Volver.setText("Volver");
        jButton_Volver.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton_Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VolverActionPerformed(evt);
            }
        });

        jButton_Borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/borrar.png"))); // NOI18N
        jButton_Borrar.setText("Borrar");
        jButton_Borrar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton_Borrar.setNextFocusableComponent(jButton_Volver);
        jButton_Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BorrarActionPerformed(evt);
            }
        });

        jComboBox_Talla.setNextFocusableComponent(jComboBox_Colores);

        jLabel4.setText("Descripción:");

        jTextField_Descripcion.setNextFocusableComponent(jButton_Nuevo);
        jTextField_Descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_DescripcionKeyTyped(evt);
            }
        });

        jLabel9.setText("P.Venta:");

        jTextField_PrePro.setNextFocusableComponent(jTextField_PreVen);
        jTextField_PrePro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_PreProKeyTyped(evt);
            }
        });

        jTextField_PreVen.setNextFocusableComponent(jComboBox_Talla);
        jTextField_PreVen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_PreVenKeyTyped(evt);
            }
        });

        jLabel10.setText("Color:");

        jComboBox_Colores.setNextFocusableComponent(jTextField_StockPro);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_NomPro, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_PrePro, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_MarcaPro, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_CodPro, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_PreVen, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_Talla, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_StockPro, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_Colores, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_Cancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Borrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_Volver, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_CodPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton_Nuevo))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField_NomPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField_MarcaPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextField_PrePro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextField_PreVen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox_Talla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jComboBox_Colores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField_StockPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField_Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_Guardar)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Actualizar)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Cancelar)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Borrar)
                        .addGap(45, 45, 45)
                        .addComponent(jButton_Volver)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField_Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_NomProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_NomProKeyTyped
        Metodos.validarCamposSoloLetras(evt, jTextField_NomPro, 15);
    }//GEN-LAST:event_jTextField_NomProKeyTyped

    private void jTextField_MarcaProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_MarcaProKeyTyped
        Metodos.validarCamposSoloLetras(evt, jTextField_MarcaPro, 15);
    }//GEN-LAST:event_jTextField_MarcaProKeyTyped

    private void jTextField_StockProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_StockProKeyTyped
        Metodos.validarCamposSoloNumeros(evt, jTextField_StockPro, 3);
    }//GEN-LAST:event_jTextField_StockProKeyTyped

    private void jTextField_BuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BuscarKeyReleased
        // TODO add your handling code here:
        cargarDatosProductos(jTextField_Buscar.getText());
    }//GEN-LAST:event_jTextField_BuscarKeyReleased

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed
        // TODO add your handling code here:
        actualizar();
    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    private void jButton_NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NuevoActionPerformed
        // TODO add your handling code here:
        botonesNuevo();
        txtBloqueo(true);
    }//GEN-LAST:event_jButton_NuevoActionPerformed

    private void jButton_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GuardarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_jButton_GuardarActionPerformed

    private void jButton_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarActionPerformed
        // TODO add your handling code here:
        txtLimpiar();
        txtBloqueo(false);
        botonesInicio();
    }//GEN-LAST:event_jButton_CancelarActionPerformed

    private void jButton_VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VolverActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton_VolverActionPerformed

    private void jButton_BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BorrarActionPerformed
        // TODO add your handling code here:
        borrarProducto();
    }//GEN-LAST:event_jButton_BorrarActionPerformed

    private void jTextField_DescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_DescripcionKeyTyped
        // TODO add your handling code here:

        if (jTextField_Descripcion.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_DescripcionKeyTyped

    private void jTextField_CodProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_CodProKeyTyped
        // TODO add your handling code here:
        if (jTextField_CodPro.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_CodProKeyTyped

    private void jTextField_PreProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PreProKeyTyped
        // TODO add your handling code here:
        if (jTextField_PrePro.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_PreProKeyTyped

    private void jTextField_PreVenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PreVenKeyTyped
        // TODO add your handling code here:

        if (jTextField_PreVen.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_PreVenKeyTyped

    private void jTable_InventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_InventarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_InventarioMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Inventario dialog = new Inventario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_Borrar;
    private javax.swing.JButton jButton_Cancelar;
    private javax.swing.JButton jButton_Guardar;
    private javax.swing.JButton jButton_Nuevo;
    private javax.swing.JButton jButton_Volver;
    private javax.swing.JComboBox<String> jComboBox_Colores;
    private javax.swing.JComboBox jComboBox_Talla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Inventario;
    private javax.swing.JTextField jTextField_Buscar;
    private javax.swing.JTextField jTextField_CodPro;
    private javax.swing.JTextField jTextField_Descripcion;
    private javax.swing.JTextField jTextField_MarcaPro;
    private javax.swing.JTextField jTextField_NomPro;
    private uctextletras.UcTextNumerosDecimales jTextField_PrePro;
    private uctextletras.UcTextNumerosDecimales jTextField_PreVen;
    private javax.swing.JTextField jTextField_StockPro;
    // End of variables declaration//GEN-END:variables
}
